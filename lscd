#!/bin/sh

lscd_base () {
    local index=1
    local cursor=0
    local offset=3

    local redraw=1
    local reerase=1
    local reprint=1

    local BOOL_show_hidden=
    local BOOL_clear=
    local BOOL_show_info=
    local STRING_file_opener=rifle
    local INT_step=6

    local stty_orig=`stty -g`
    stty -echo

    get_dimensions () {
        cols="$(tput cols)"
        lines="$(tput lines)"
    }

    move () {
        local arg="$1"
        local total
        local total_visible
        local new_cursor

        redraw=1
        cursor="$((cursor + arg))"
        if [ "$1" -gt 0 ]; then
            total="$(listfiles | wc -l)"
            total_visible="$((total - index))"
            if [ "$cursor" -gt "$((lines - offset))" ]; then
                new_cursor="$((lines - offset - INT_step))"
                index="$((index + cursor - new_cursor))"
                cursor="$new_cursor"
                reerase=1
                reprint=1
            fi
        fi
        if [ "$cursor" -lt 0 ]; then
            if [ "$index" -gt 1 ]; then
                cursor="$((INT_step))"
                index="$((index - INT_step))"
                reerase=1
                reprint=1
            else
                cursor=0
            fi
            [ "$index" -lt 1 ] && index=1
        fi

    #    index="$((index + arg))"
    #    if [ "$1" -gt 0 -a "$index" ]; then
    #        get_dimensions
    #        total="$(listfiles | wc -l)"
    #        total="$((total - lines + 1))"
    #        if [ "$index" -gt "$total" ]; then
    #            index="$total"
    #        fi
    #    fi
    #    if [ "$index" -lt 1 ]; then
    #        index=1
    #    fi
    }

    erase () {
        local i="$lines"
        while [ "$i" -gt 0 ]; do
            printf "\033[$i;1H\033[K"
            i="$((i-1))"
        done
    }

    listfiles () {
        local args
        if [ "$1" == "-v" ]; then
            args="--color"
        else
            args=
        fi
        test -n "$BOOL_show_hidden" && args="$args -A"

        if [ -n "$BOOL_show_info" -a "$1" == "-v" ]; then
            # Strip off the summary line
            ls $args -l | tail -n +2
        else
            ls $args
        fi
    }

    movedir () {
        reerase=1
        redraw=1
        reprint=1
        index=1
        cursor=0
        cd "$1"
    }

    draw () {
        get_dimensions
        if [ -n "$reerase" ]; then
            if [ -n "$BOOL_clear" ]; then
                clear
            else
                erase
            fi
        fi
        target="$(listfiles | tail -n +"$((index + cursor))" | head -n 1)"
        if [ -n "$reprint" ]; then
            printf "\033[1;1H\033[K"
            printf "\033[1;32m$USER@$(hostname):\033[1;34m$(pwd)/\033[1;33m$target\033[00m\n"
            listfiles -v | tail -n +"$index" | head -n "$((lines - 2))" | sed 's/\(.\{'"$cols"'\}\).*/\1/;'
        fi
        redraw=
        reprint=
        reerase=
        printf "\033[$((cursor + 2));1H"
    }

    openfile () {
        target="$1"
        [ -z "$target" ] && return
        filetype="$(stat -c %F "$target")"
        case "$filetype" in
            directory)
                movedir "$target";;
            *)
                $STRING_file_opener "$target";;
        esac
    }

    while true; do
        test -n "$redraw" && draw

        read -n 1 input

        case "$input" in
            j)
                move 1;;
            d)
                move 10;;
            u)
                move -10;;
            k)
                move -1;;
            g)
                move -9999999999;;
            G)
                move 9999999999;;
            h)
                movedir ..;;
            l)
                openfile "$target"
                redraw=1;;
            \~)
                movedir ~;;
            z)
                if [ -z "$BOOL_show_hidden" ]; then BOOL_show_hidden=1; else BOOL_show_hidden=; fi
                reprint=1
                reerase=1
                redraw=1;;
            x)
                if [ -z "$BOOL_show_info" ]; then BOOL_show_info=1; else BOOL_show_info=; fi
                reprint=1
                reerase=1
                redraw=1;;
            )
                clear
                redraw=1
                reprint=1;;
            q)
                stty $stty_orig
                break;;
        esac
    done
}

lscd_base
